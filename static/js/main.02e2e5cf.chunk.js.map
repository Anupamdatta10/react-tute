{"version":3,"sources":["componants/questionPaper/question.js","App.js","reportWebVitals.js","index.js"],"names":["Question","useState","questionList","setQuestionList","questionOption","setQuestionOption","questionDescription","setQuestionDescription","show","setShow","handleClose","handelchange","e","type","target","value","t","Button","variant","onClick","length","map","index","description","option","op","i","Object","keys","Modal","onHide","Header","closeButton","Title","Body","Form","Group","className","controlId","Label","Control","placeholder","autoFocus","onChange","Footer","temp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02e2e5cf.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Modal from 'react-bootstrap/Modal';\r\nexport default function Question() {\r\n  let [questionList, setQuestionList] = useState([]);\r\n  let [questionOption, setQuestionOption] = useState([{}]);\r\n  let [questionDescription, setQuestionDescription] = useState();\r\n\r\n  let [show, setShow] = useState(false);\r\n  let addOption = () => {\r\n    setQuestionOption([...questionOption, {}])\r\n  }\r\n  let createQuestion = () => {\r\n    setShow(true)\r\n  }\r\n  let handleClose = () => {\r\n    setQuestionOption([{}])\r\n    setShow(false)\r\n  }\r\n  let saveQuestion = () => {\r\n\r\n    let temp = { \"description\": questionDescription, \"option\": questionOption }\r\n    setQuestionList([...questionList, temp])\r\n    setQuestionOption([{}])\r\n    setQuestionDescription(\"\")\r\n\r\n    handleClose()\r\n  }\r\n  let handelchange = (e, type) => {\r\n    if (type == \"description\") {\r\n      setQuestionDescription(e.target.value)\r\n    }\r\n    else {\r\n      let t = questionOption;\r\n      t[type] = { [type + 1]: e.target.value };\r\n      setQuestionOption(t);\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Button variant=\"primary\" onClick={() => { createQuestion() }}>add Question</Button>\r\n      {questionList.length > 0 ? questionList.map((value, index) => {\r\n        return (<div key={index}>{value.description}<div>{value.option.map((op, i) => { return (<div>{Object.keys(op)[0]}:{op[Object.keys(op)[0]]}</div>) })}</div></div>)\r\n      }) : null}\r\n       {questionList.length?<Button variant=\"primary\">download</Button>:null}\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>question details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Question description</Form.Label>\r\n\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                autoFocus\r\n                onChange={(e) => { handelchange(e, \"description\") }}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group\r\n              className=\"mb-3\"\r\n              controlId=\"exampleForm.ControlTextarea1\"\r\n            >\r\n              {questionOption.map((value, index) => {\r\n                return (\r\n                  <div key={index}> <Form.Label>Question options({index + 1})</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"option\"\r\n                      onChange={(e) => { handelchange(e, index) }}\r\n                      autoFocus\r\n                    /></div>\r\n                )\r\n              })}\r\n\r\n            </Form.Group>\r\n            <Button onClick={addOption}>add option</Button>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={saveQuestion}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\n//import Nav from './componants/nav';\r\n//import Text from './componants/text';\r\n//import Todo from './componants/todo';\r\n//import ShoHide from './componants/shoHide';\r\n//import RandUserClass from './componants/RandUserClass';\r\n//import Users from \"./componants/newproject/page1\";\r\n//import To_do from \"./componants/to_do\";\r\n//import ClassComp from './componants/classcomp';\r\n//import Randuser from './componants/randomuser';\r\n//import Sign_up from \"./componants/signup\";\r\n// import Login from \"./componants/login\"\r\n// import Page1 from \"./componants/page1\";\r\n// import Page2 from \"./componants/page2\";\r\n//import Dashboard from \"./componants/dashboard\";\r\n// import {\r\n//   BrowserRouter,\r\n//   Routes,\r\n//   Route,\r\n//   Link\r\n// } from \"react-router-dom\";\r\n//import Add from './componants/add'\r\nimport Question from \"./componants/questionPaper/question\";\r\n//import Fees from \"./componants/student_fees/fees\";\r\nfunction App() {\r\n  return (\r\n  //   <BrowserRouter>\r\n  //   <Routes>\r\n  //       <Route path=\"/login\"  element={<Login/>}>\r\n  //       <Route path=\"page1\" element={<Page1/>} />\r\n  //       {/* <Route path=\"blogs\" element={<Blogs />} />\r\n  //       <Route path=\"contact\" element={<Contact />} /> */}\r\n  //     </Route>\r\n  //   </Routes>\r\n  // </BrowserRouter>\r\n    //<Login/>\r\n    //<Dashboard/>\r\n    //<Sign_up />\r\n    //<To_do />\r\n    // <RandUserClass/>\r\n    // <Users />\r\n    //<Add/>\r\n     <Question/>\r\n    //<Fees/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}